/*PRACTICAL NO 11*/
/* Shahrukh khan -SCA05*/
/*Consider a scenario for Hospital to cater services to different kinds of patients as Serious
(top priority), b) non-serious (medium priority), c) General Checkup (Least priority).
Implement the priority queue to cater services to the patients
**/


#include<iostream>
#include<string>
#define N 20
#define SERIOUS 10
#define NONSERIOUS 5
#define CHECKUP 1
using namespace std;

string Q[N];
int Pr[N];
int r = -1, f = -1;

void enqueue(string data, int p) {
    if (f == 0 && r == N - 1) {
        cout << "Queue is full" << endl;
        return;
    }

    if (f == -1) {
        f = r = 0;
        Q[r] = data;
        Pr[r] = p;
        return;
    }

    if (r == N - 1) {
        // Shift elements to the front
        int start = f;
        int length = r - f + 1;
        for (int i = 0; i < length; i++) {
            Q[i] = Q[start + i];
            Pr[i] = Pr[start + i];
        }
        f = 0;
        r = length - 1;
    }

    // Find position to insert
    int i;
    for (i = r; i >= f; i--) {
        if (p > Pr[i]) {
            Q[i + 1] = Q[i];
            Pr[i + 1] = Pr[i];
        } else {
            break;
        }
    }
    Q[i + 1] = data;
    Pr[i + 1] = p;
    r++;
}

void print() {
    if (f == -1) {
        cout << "Queue is empty" << endl;
        return;
    }
    for (int i = f; i <= r; i++) {
        cout << "Patient's Name - " << Q[i];
        switch (Pr[i]) {
            case CHECKUP: cout << " Priority - 'Checkup'" << endl; break;
            case NONSERIOUS: cout << " Priority - 'Non-serious'" << endl; break;
            case SERIOUS: cout << " Priority - 'Serious'" << endl; break;
            default: cout << " Priority unknown" << endl;
        }
    }
}

void dequeue() {
    if (f == -1) {
        cout << "Queue is Empty" << endl;
        return;
    }
    cout << "Deleted Element: " << Q[f] << endl;
    cout << "Its Priority: " << Pr[f] << endl;
    (f == r) ? f = r = -1 : f++;
}

int main() {
    int opt, n, p;
    string data;
    do {
        cout << "\n1. Add Patient\n2. Show Queue\n3. Dequeue\n0. Exit\nChoice: ";
        cin >> opt;
        switch(opt) {
            case 1: {
                cout << "Number of patients: ";
                cin >> n;
                for(int i=0; i<n; ) {
                    cout << "Name: ";
                    cin >> data;
                    while(true) {
                        cout << "Priority (0-Serious, 1-Non-serious, 2-Checkup): ";
                        cin >> p;
                        if(p >= 0 && p <= 2) break;
                        cout << "Invalid priority! Try again.\n";
                    }
                    switch(p) {
                        case 0: enqueue(data, SERIOUS); break;
                        case 1: enqueue(data, NONSERIOUS); break;
                        case 2: enqueue(data, CHECKUP); break;
                    }
                    i++;
                }
                break;
            }
            case 2: print(); break;
            case 3: dequeue(); break;
            case 0: cout << "Exiting...\n"; break;
            default: cout << "Invalid option!\n";
        }
    } while(opt != 0);

    return 0;
}
